name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    types: [assigned, opened, synchronize, reopened]
  workflow_dispatch:

# This workflow has two jobs: `build-dependencies` and `build-and-test`. `build-dependencies` is a subset of `build-and-test`. This allows us to cache the LLVM build (which took almost 1.5 hours at the time of writing) even if the subsequent tests fail, which is helpful when trying to get a new version of llvm through CI.
# WARNING: Edit this file with caution. If the two sections that build LLVM end up out of sync it might cause some nasty bugs.
# See also:
#  -  https://stackoverflow.com/questions/60491837/saving-cache-on-job-failure-in-github-actions
jobs:
  build-dependencies:
    name: Commit Validation
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # This sequence of steps must match the sequence below in the validate job
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: .dependencies/installed
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('Tools/llvm-commit', 'Tools/build-dependencies', 'Tools/SwiftFormat/**') }}
      - name: Install Ninja
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Clone, Build and Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          PKG_CONFIG_ROOT=.dependencies/installed NO_INTERACTION=true Tools/build-dependencies
      - name: Delete binaries
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        # We don't use binaries, and they take up alot of cache space. Eventually, we hope to only install the packages we need.
        run: |
          du -sh .dependencies/installed/*
          rm -rf .dependencies/installed/bin
          
  # Validate this commit
  validate:
    name: Validate Commit
    needs: build-dependencies
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # The following sequence of steps must match the sequence above in build-dependencies
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: .dependencies/installed
          key: ${{ runner.os }}-dependencies-v1-${{ hashFiles('llvm-commit', 'Tools/build-dependencies', 'Tools/SwiftFormat/**') }}
      - name: Install Ninja
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Clone, Build and Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          PKG_CONFIG_ROOT=.dependencies/installed NO_INTERACTION=true Tools/build-dependencies
      - name: Delete binaries
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        # We don't use binaries, and they take up alot of cache space. Eventually, we hope to only install the packages we need.
        run: |
          du -sh .dependencies/installed/*
          rm -rf .dependencies/installed/bin
          
      # Actually validate this commit
      
      - name: Lint
        run: |
          Tools/swift-format
          git diff
          git diff-index --quiet HEAD --
        
      - name: Run tests
        run: |
          PKG_CONFIG_PATH=$PWD/.dependencies/installed swift test --enable-test-discovery
