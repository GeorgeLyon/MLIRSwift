module CMLIR [system] {
  header "CMLIR.h"

  link "MLIRCAPIRegistration"
  
  // Dialects
  link "MLIRStandard"
  link "MLIRCAPIStandard"
  link "MLIRSCF"
  
  /**
   All libs... hopefully we can trim this down over time
   */
  link "LLVMAggressiveInstCombine"
  link "LLVMAnalysis"
  link "LLVMAsmParser"
  link "LLVMAsmPrinter"
  link "LLVMBinaryFormat"
  link "LLVMBitReader"
  link "LLVMBitWriter"
  link "LLVMBitstreamReader"
  link "LLVMCFGuard"
  link "LLVMCodeGen"
  link "LLVMCore"
  link "LLVMCoroutines"
  link "LLVMDebugInfoCodeView"
  link "LLVMDebugInfoDWARF"
  link "LLVMDebugInfoMSF"
  link "LLVMDemangle"
  link "LLVMExecutionEngine"
  link "LLVMFileCheck"
  link "LLVMFrontendOpenMP"
  link "LLVMGlobalISel"
  link "LLVMHelloNew"
  link "LLVMIRReader"
  link "LLVMInstCombine"
  link "LLVMInstrumentation"
  link "LLVMJITLink"
  link "LLVMLinker"
  link "LLVMMC"
  link "LLVMMCDisassembler"
  link "LLVMMCParser"
  link "LLVMObjCARCOpts"
  link "LLVMObject"
  link "LLVMOrcJIT"
  link "LLVMOrcShared"
  link "LLVMOrcTargetProcess"
  link "LLVMPasses"
  link "LLVMProfileData"
  link "LLVMRemarks"
  link "LLVMRuntimeDyld"
  link "LLVMScalarOpts"
  link "LLVMSelectionDAG"
  link "LLVMSupport"
  link "LLVMTarget"
  link "LLVMTextAPI"
  link "LLVMTransformUtils"
  link "LLVMVectorize"
  link "LLVMX86AsmParser"
  link "LLVMX86CodeGen"
  link "LLVMX86Desc"
  link "LLVMX86Info"
  link "LLVMipo"
  link "MLIRAVX512"
  link "MLIRAVX512ToLLVM"
  link "MLIRAffine"
  link "MLIRAffineEDSC"
  link "MLIRAffineToStandard"
  link "MLIRAffineTransforms"
  link "MLIRAffineTransformsTestPasses"
  link "MLIRAffineUtils"
  link "MLIRAnalysis"
  link "MLIRAsync"
  link "MLIRAsyncToLLVM"
  link "MLIRAsyncTransforms"
  link "MLIRCAPIIR"
  link "MLIRCAPIRegistration"
  link "MLIRCAPIStandard"
  link "MLIRCallInterfaces"
  link "MLIRControlFlowInterfaces"
  link "MLIRCopyOpInterface"
  link "MLIRDerivedAttributeOpInterface"
  link "MLIRDialect"
  link "MLIREDSC"
  link "MLIRExecutionEngine"
  link "MLIRGPU"
  link "MLIRGPUToGPURuntimeTransforms"
  link "MLIRGPUToNVVMTransforms"
  link "MLIRGPUToROCDLTransforms"
  link "MLIRGPUToSPIRVTransforms"
  link "MLIRGPUToVulkanTransforms"
  link "MLIRIR"
  link "MLIRInferTypeOpInterface"
  link "MLIRJitRunner"
  link "MLIRLLVMAVX512"
  link "MLIRLLVMIR"
  link "MLIRLLVMIRTransforms"
  link "MLIRLinalg"
  link "MLIRLinalgAnalysis"
  link "MLIRLinalgEDSC"
  link "MLIRLinalgToLLVM"
  link "MLIRLinalgToSPIRVTransforms"
  link "MLIRLinalgToStandard"
  link "MLIRLinalgTransforms"
  link "MLIRLinalgUtils"
  link "MLIRLoopAnalysis"
  link "MLIRLoopLikeInterface"
  link "MLIRNVVMIR"
  link "MLIROpenACC"
  link "MLIROpenMP"
  link "MLIROpenMPToLLVM"
  link "MLIROptLib"
  link "MLIRPDL"
  link "MLIRPDLInterp"
  link "MLIRPDLToPDLInterp"
  link "MLIRParser"
  link "MLIRPass"
  link "MLIRPresburger"
  link "MLIRQuant"
  link "MLIRROCDLIR"
  link "MLIRReduce"
  link "MLIRRewrite"
  link "MLIRSCF"
  link "MLIRSCFToGPU"
  link "MLIRSCFToOpenMP"
  link "MLIRSCFToSPIRV"
  link "MLIRSCFToStandard"
  link "MLIRSCFTransforms"
  link "MLIRSDBM"
  link "MLIRSPIRV"
  link "MLIRSPIRVModuleCombiner"
  link "MLIRSPIRVSerialization"
  link "MLIRSPIRVTestPasses"
  link "MLIRSPIRVToLLVM"
  link "MLIRSPIRVTransforms"
  link "MLIRShape"
  link "MLIRShapeOpsTransforms"
  link "MLIRShapeToStandard"
  link "MLIRSideEffectInterfaces"
  link "MLIRStandard"
  link "MLIRStandardOpsTransforms"
  link "MLIRStandardToLLVM"
  link "MLIRStandardToSPIRVTransforms"
  link "MLIRSupport"
  link "MLIRSupportIndentedOstream"
  link "MLIRTargetAVX512"
  link "MLIRTargetLLVMIR"
  link "MLIRTargetLLVMIRModuleTranslation"
  link "MLIRTargetNVVMIR"
  link "MLIRTargetROCDLIR"
  link "MLIRTestDialect"
  link "MLIRTestIR"
  link "MLIRTestPass"
  link "MLIRTestReducer"
  link "MLIRTestTransforms"
  link "MLIRTosa"
  link "MLIRTosaTestPasses"
  link "MLIRTosaTransforms"
  link "MLIRTransformUtils"
  link "MLIRTransforms"
  link "MLIRTranslation"
  link "MLIRVector"
  link "MLIRVectorInterfaces"
  link "MLIRVectorToLLVM"
  link "MLIRVectorToROCDL"
  link "MLIRVectorToSCF"
  link "MLIRVectorToSPIRV"
  link "MLIRViewLikeInterface"
  
  export *
}
